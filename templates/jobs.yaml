{{- if .Values.st2.rbac.enabled -}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-job-st2-apply-rbac-definitions
  labels:
    app: st2-apply-rbac-definitions
    tier: backend
    vendor: stackstorm
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    helm.sh/hook: post-install, post-upgrade, post-rollback
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "5"
spec:
  template:
    metadata:
      name: job-st2-apply-rbac-definitions
      labels:
        app: st2-apply-rbac-definitions
        tier: backend
        vendor: stackstorm
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        # TODO: Investigate/propose running Helm hook only on condition when ConfigMap or Secret has changed
        checksum/config: {{ include (print $.Template.BasePath "/configmaps_st2-conf.yaml") . | sha256sum }}
        checksum/rbac: {{ include (print $.Template.BasePath "/configmaps_rbac.yaml") . | sha256sum }}
        {{- if .Values.jobs.annotations }}
          {{- toYaml .Values.jobs.annotations | nindent 8 }}
        {{- end }}
    spec:
      imagePullSecrets:
      {{- if .Values.image.pullSecret }}
      - name: {{ .Values.image.pullSecret }}
      {{- end }}
      containers:
      - name: st2-apply-rbac-definitions
        image: '{{ template "imageRepository" . }}/st2actionrunner:{{ tpl (.Values.jobs.image.tag | default (.Values.st2actionrunner.image.tag | default .Values.image.tag)) . }}'
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - st2-apply-rbac-definitions
          - --verbose
          - --config-file=/etc/st2/st2.conf
          - --config-file=/etc/st2/st2.docker.conf
          - --config-file=/etc/st2/st2.user.conf
        volumeMounts:
        {{- include "st2-config-volume-mounts" . | nindent 8 }}
        - name: st2-rbac-roles-vol
          mountPath: /opt/stackstorm/rbac/roles/
        - name: st2-rbac-assignments-vol
          mountPath: /opt/stackstorm/rbac/assignments/
        - name: st2-rbac-mappings-vol
          mountPath: /opt/stackstorm/rbac/mappings/
        # TODO: Find out default resource limits for this specific service (#5)
        #resources:
      volumes:
        {{- include "st2-config-volume" . | nindent 8 }}
        - name: st2-rbac-roles-vol
          configMap:
            name: {{ .Release.Name }}-st2-rbac-roles
        - name: st2-rbac-assignments-vol
          configMap:
            name: {{ .Release.Name }}-st2-rbac-assignments
        - name: st2-rbac-mappings-vol
          configMap:
            name: {{ .Release.Name }}-st2-rbac-mappings
      restartPolicy: OnFailure
    {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
    {{- end }}
    {{- with .Values.dnsConfig }}
      dnsConfig: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
    {{- end }}

{{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-job-st2-apikey-load
  labels:
    app: st2
    tier: backend
    vendor: stackstorm
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    helm.sh/hook: post-install, post-upgrade, post-rollback
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "6"
spec:
  template:
    metadata:
      name: job-st2-apikey-load
      labels:
        app: st2
        tier: backend
        vendor: stackstorm
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        # TODO: Investigate/propose running Helm hook only on condition when ConfigMap or Secret has changed
        checksum/urls: {{ include (print $.Template.BasePath "/configmaps_st2-urls.yaml") . | sha256sum }}
        checksum/apikeys: {{ include (print $.Template.BasePath "/secrets_st2apikeys.yaml") . | sha256sum }}
        {{- if .Values.jobs.annotations }}
          {{- toYaml .Values.jobs.annotations | nindent 8 }}
        {{- end }}
    spec:
      imagePullSecrets:
      {{- if .Values.image.pullSecret }}
      - name: {{ .Values.image.pullSecret }}
      {{- end }}
      initContainers:
      {{- include "init-containers-wait-for-db" . | nindent 6 }}
      - name: wait-for-api
        image: busybox:1.28
        command:
          - 'sh'
          - '-c'
          - >
            until nc -z -w 2 {{ .Release.Name }}-st2api 9101 && echo st2api ready;
              do sleep 2;
            done
      # Sidecar container for generating st2client config with st2 username & password pair and sharing produced file with the main container
      - name: generate-st2client-config
        image: '{{ template "imageRepository" . }}/st2actionrunner:{{ tpl (.Values.jobs.image.tag | default (.Values.st2actionrunner.image.tag | default .Values.image.tag)) . }}'
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-st2-urls
        env:
        - name: ST2_AUTH_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-st2-auth
              key: username
        - name: ST2_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-st2-auth
              key: password
        volumeMounts:
        - name: st2client-config-vol
          mountPath: /root/.st2/
        # `st2 login` doesn't exit on failure correctly, use old methods instead. See bug: https://github.com/StackStorm/st2/issues/4338
        command:
          - 'sh'
          - '-ec'
          - |
            cat <<EOT > /root/.st2/config
            [credentials]
            username = ${ST2_AUTH_USERNAME}
            password = ${ST2_AUTH_PASSWORD}
            EOT
      containers:
      - name: st2-apikey-load
        image: '{{ template "imageRepository" . }}/st2actionrunner:{{ tpl (.Values.jobs.image.tag | default (.Values.st2actionrunner.image.tag | default .Values.image.tag)) . }}'
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - st2
          - apikey
          - load
          - /etc/st2/apikeys.yaml
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-st2-urls
        volumeMounts:
        - name: st2client-config-vol
          mountPath: /root/.st2/
        - name: st2-apikeys-vol
          mountPath: /etc/st2/apikeys.yaml
          subPath: apikeys.yaml
        # TODO: Find out default resource limits for this specific service (#5)
        #resources:
      volumes:
        - name: st2client-config-vol
          emptyDir:
            medium: Memory
        - name: st2-apikeys-vol
          secret:
            secretName: {{ .Release.Name }}-st2-apikeys
      restartPolicy: OnFailure
    {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
    {{- end }}
    {{- with .Values.dnsConfig }}
      dnsConfig: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
    {{- end }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-job-st2-key-load
  labels:
    app: st2
    tier: backend
    vendor: stackstorm
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    helm.sh/hook: post-install, post-upgrade, post-rollback
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "6"
spec:
  template:
    metadata:
      name: job-st2-key-load
      labels:
        app: st2
        tier: backend
        vendor: stackstorm
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        # TODO: Investigate/propose running Helm hook only on condition when ConfigMap or Secret has changed
        checksum/config: {{ include (print $.Template.BasePath "/configmaps_st2-conf.yaml") . | sha256sum }}
        checksum/urls: {{ include (print $.Template.BasePath "/configmaps_st2-urls.yaml") . | sha256sum }}
        {{- if .Values.jobs.annotations }}
          {{- toYaml .Values.jobs.annotations | nindent 8 }}
        {{- end }}
    spec:
      imagePullSecrets:
      {{- if .Values.image.pullSecret }}
      - name: {{ .Values.image.pullSecret }}
      {{- end }}
      initContainers:
      {{- include "init-containers-wait-for-db" . | nindent 6 }}
      # Sidecar container for generating st2client config with st2 username & password pair and sharing produced file with the main container
      - name: generate-st2client-config
        image: '{{ template "imageRepository" . }}/st2actionrunner:{{ tpl (.Values.jobs.image.tag | default (.Values.st2actionrunner.image.tag | default .Values.image.tag)) . }}'
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-st2-urls
        env:
        - name: ST2_AUTH_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-st2-auth
              key: username
        - name: ST2_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-st2-auth
              key: password
        volumeMounts:
        - name: st2client-config-vol
          mountPath: /root/.st2/
        # `st2 login` doesn't exit on failure correctly, use old methods instead. See bug: https://github.com/StackStorm/st2/issues/4338
        command:
          - 'sh'
          - '-ec'
          - |
            cat <<EOT > /root/.st2/config
            [credentials]
            username = ${ST2_AUTH_USERNAME}
            password = ${ST2_AUTH_PASSWORD}
            EOT
      containers:
      - name: st2-key-load
        image: '{{ template "imageRepository" . }}/st2actionrunner:{{ tpl (.Values.jobs.image.tag | default (.Values.st2actionrunner.image.tag | default .Values.image.tag)) . }}'
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - st2
          - key
          - load
          - /etc/st2/st2kv.yaml
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-st2-urls
        volumeMounts:
        {{- include "st2-config-volume-mounts" . | nindent 8 }}
        - name: st2client-config-vol
          mountPath: /root/.st2/
        - name: st2-kv-vol
          mountPath: /etc/st2/st2kv.yaml
          subPath: st2kv.yaml
        # TODO: Find out default resource limits for this specific service (#5)
        #resources:
      volumes:
        {{- include "st2-config-volume" . | nindent 8 }}
        - name: st2client-config-vol
          emptyDir:
            medium: Memory
        - name: st2-kv-vol
          secret:
            secretName: {{ .Release.Name }}-st2-kv
      restartPolicy: OnFailure
    {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
    {{- end }}
    {{- with .Values.dnsConfig }}
      dnsConfig: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
    {{- end }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-job-st2-register-content
  labels:
    app: st2-register-content
    tier: backend
    vendor: stackstorm
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    helm.sh/hook: post-install, post-upgrade, post-rollback
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "7"
spec:
  template:
    metadata:
      name: job-st2-register-content
      labels:
        app: st2-register-content
        tier: backend
        vendor: stackstorm
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        # TODO: Investigate/propose running Helm hook only on condition when ConfigMap or Secret has changed
        checksum/config: {{ include (print $.Template.BasePath "/configmaps_st2-conf.yaml") . | sha256sum }}
        checksum/packs: {{ include (print $.Template.BasePath "/configmaps_packs.yaml") . | sha256sum }}
        {{- if .Values.jobs.annotations }}
          {{- toYaml .Values.jobs.annotations | nindent 8 }}
        {{- end }}
    spec:
      imagePullSecrets:
      {{- if .Values.image.pullSecret }}
      - name: {{ .Values.image.pullSecret }}
      {{- end }}
      {{- if $.Values.st2.packs.images -}}
        {{- include "packs-pullSecrets" . | nindent 6 }}
      {{- end }}
      initContainers:
      {{- include "init-containers-wait-for-db" . | nindent 6 }}
      {{- include "packs-initContainers" . | nindent 6 }}
      containers:
      - name: st2-register-content
        image: '{{ template "imageRepository" . }}/st2actionrunner:{{ tpl (.Values.jobs.image.tag | default (.Values.st2actionrunner.image.tag | default .Values.image.tag)) . }}'
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - st2-register-content
          - --config-file=/etc/st2/st2.conf
          - --config-file=/etc/st2/st2.docker.conf
          - --config-file=/etc/st2/st2.user.conf
          - --register-all
          - --register-fail-on-failure
        volumeMounts:
        {{- include "st2-config-volume-mounts" . | nindent 8 }}
        {{- include "packs-volume-mounts-for-register-job" . | nindent 8 }}
        {{- include "pack-configs-volume-mount" . | nindent 8 }}
        # TODO: Find out default resource limits for this specific service (#5)
        #resources:
      volumes:
        {{- include "st2-config-volume" . | nindent 8 }}
        {{- include "packs-volumes" . | nindent 8 }}
        {{- include "pack-configs-volume" . | nindent 8 }}
      restartPolicy: OnFailure
    {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
    {{- end }}
    {{- with .Values.dnsConfig }}
      dnsConfig: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jobs.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
    {{- end }}
